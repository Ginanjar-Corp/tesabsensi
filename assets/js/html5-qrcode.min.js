/*!
 * html5-qrcode.min.js
 * Version 2.3.8
 *
 * Copyright 2021 Lazar Laszlo
 * https://github.com/mebjas/html5-qrcode
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Html5Qrcode = function() {
    "use strict";

    function e(t, n, r) {
        return n in t ? Object.defineProperty(t, n, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[n] = r, t
    }

    function t(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t && (r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable
            }))), n.push.apply(n, r)
        }
        return n
    }

    function n(e) {
        for (var n = 1; n < arguments.length; n++) {
            var r = null != arguments[n] ? arguments[n] : {};
            n % 2 ? t(Object(r), !0).forEach((function(t) {
                e(e, t, r[t])
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : t(Object(r)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
            }))
        }
        return e
    }

    function r(e) {
        return function(e) {
            if (Array.isArray(e)) return o(e)
        }(e) || function(e) {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
        }(e) || function(e, t) {
            if (!e) return;
            if ("string" == typeof e) return o(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            "Object" === n && e.constructor && (n = e.constructor.name);
            if ("Map" === n || "Set" === n) return Array.from(e);
            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return o(e, t)
        }(e) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function o(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
        return r
    }

    function i(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }

    function a(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
        }
        return e
    }

    function s(e, t, n) {
        return t && a(e.prototype, t), n && a(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e
    }

    function c(e, t) {
        return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e
        }, c(e, t)
    }

    function u(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && c(e, t)
    }

    function l(e) {
        return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e) {
            return e.__proto__ = null, e
        }, l(e)
    }

    function d(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e
    }

    function f(e, t) {
        if (t && ("object" == typeof t || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return d(e)
    }

    function h(e) {
        var t = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
            } catch (e) {
                return !1
            }
        }();
        return function() {
            var n, r = l(e);
            if (t) {
                var o = l(this).constructor;
                n = Reflect.construct(r, arguments, o)
            } else n = r.apply(this, arguments);
            return f(this, n)
        }
    }

    function p(e) {
        return function(e) {
            if ("string" == typeof e) return m(e)
        }(e) || function(e) {
            var t = e && ("undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"]);
            if (null == t) return;
            var n = [];
            var r = !0;
            var o = !1;
            var i, a;
            try {
                for (t = t.call(e); !(r = (i = t.next()).done) && (n.push(i.value), !0); r = !0);
            } catch (e) {
                o = !0, a = e
            } finally {
                try {
                    r || null == t.return || t.return()
                } finally {
                    if (o) throw a
                }
            }
            return n
        }(e) || function(e, t) {
            if (!e) return;
            if ("string" == typeof e) return m(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            "Object" === n && e.constructor && (n = e.constructor.name);
            if ("Map" === n || "Set" === n) return Array.from(e);
            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return m(e, t)
        }(e) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function m(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
        return r
    }

    function g(e, t) {
        var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (!n) {
            if (Array.isArray(e) || (n = function(e, t) {
                    if (!e) return;
                    if ("string" == typeof e) return v(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    "Object" === n && e.constructor && (n = e.constructor.name);
                    if ("Map" === n || "Set" === n) return v(e, t);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return v(e, t)
                }(e)) || t && e && "number" == typeof e.length) {
                n && (e = n);
                var r = 0;
                return function() {
                    return r >= e.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: e[r++]
                    }
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        return (n = n.call(e)).next.bind(n)
    }

    function v(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
        return r
    }
    var y = "Html5Qrcode";
    var b = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            i(this, e), this.x = t, this.y = n
        }
        return s(e, [{
            key: "equals",
            value: function(e) {
                return this.x === e.x && this.y === e.y
            }
        }]), e
    }();
    var _ = function() {
        function e(t, n, r, o) {
            i(this, e), this.x = t, this.y = n, this.width = r, this.height = o
        }
        return s(e, [{
            key: "to",
            value: function() {
                return new b(this.x + this.width, this.y + this.height)
            }
        }, {
            key: "equals",
            value: function(e) {
                return this.x === e.x && this.y === e.y && this.width === e.width && this.height === e.height
            }
        }]), e
    }();
    var w = function() {
        function e(t, n, r, o) {
            i(this, e), this.topLeft = t, this.topRight = n, this.bottomLeft = r, this.bottomRight = o
        }
        return s(e, [{
            key: "equals",
            value: function(e) {
                return this.topLeft.equals(e.topLeft) && this.topRight.equals(e.topRight) && this.bottomLeft.equals(e.bottomLeft) && this.bottomRight.equals(e.bottomRight)
            }
        }]), e
    }();
    var S = function() {
        function e(t, n) {
            i(this, e), this.result = t, this.resultPoints = n
        }
        return s(e, [{
            key: "equals",
            value: function(e) {
                return this.result === e.result && JSON.stringify(this.resultPoints) === JSON.stringify(e.resultPoints)
            }
        }]), e
    }();
    var C = function() {
        function e(t) {
            i(this, e), this.value = t
        }
        return s(e, [{
            key: "toString",
            value: function() {
                return this.value
            }
        }]), e
    }();
    var E = new C("CODE_128");
    var P = new C("CODE_39");
    var x = new C("CODE_93");
    var k = new C("CODABAR");
    var T = new C("DATA_MATRIX");
    var I = new C("EAN_13");
    var A = new C("EAN_8");
    var O = new C("ITF");
    var N = new C("QR_CODE");
    var R = new C("UPC_A");
    var L = new C("UPC_E");
    var M = new C("PDF_417");
    var D = new C("AZTEC");
    var F = new C("MSI");
    var V = new C("PLESSEY");
    var Q = new C("IMB");
    var U = new C("RSS_14");
    var H = new C("RSS_EXPANDED");
    var z = new C("MAXICODE");
    var G = {
        CODE_128: E,
        CODE_39: P,
        CODE_93: x,
        CODABAR: k,
        DATA_MATRIX: T,
        EAN_13: I,
        EAN_8: A,
        ITF: O,
        QR_CODE: N,
        UPC_A: R,
        UPC_E: L,
        PDF_417: M,
        AZTEC: D,
        MSI: F,
        PLESSEY: V,
        IMB: Q,
        RSS_14: U,
        RSS_EXPANDED: H,
        MAXICODE: z
    };
    var j = function() {
        function e() {
            i(this, e)
        }
        return s(e, null, [{
            key: "create",
            value: function(e) {
                if (!e) return;
                var t = e.resultPointCallback;
                if (void 0 !== t && null !== t && "function" != typeof t) throw "resultPointCallback is not a callable function.";
                var n = e.decodeFormats;
                if (void 0 !== n && null !== n) {
                    if (!Array.isArray(n)) throw "decodeFormats is not an array.";
                    var r = !0,
                        o = !1,
                        i = void 0;
                    try {
                        for (var a, s = g(n); !(r = (a = s.next()).done); r = !0) {
                            var c = a.value;
                            if (!(c instanceof C)) throw "Invalid type given in decodeFormats."
                        }
                    } catch (e) {
                        o = !0, i = e
                    } finally {
                        try {
                            r || null == s.return || s.return()
                        } finally {
                            if (o) throw i
                        }
                    }
                }
                return {
                    resultPointCallback: t,
                    decodeFormats: n
                }
            }
        }]), e
    }();
    var B = function() {
        function e() {
            i(this, e)
        }
        return s(e, null, [{
            key: "create",
            value: function(e) {
                if (!e) return;
                var t = e.fps;
                if (void 0 !== t && null !== t) {
                    if ("number" != typeof t) throw "fps is not a number.";
                    if (t < 1) throw "fps is not positive."
                }
                var n = e.qrbox;
                if (void 0 !== n && null !== n) {
                    if ("object" != typeof n) throw "qrbox is not an object.";
                    var r = n.width;
                    if (void 0 !== r && null !== r) {
                        if ("number" != typeof r) throw "qrbox.width is not a number.";
                        if (r < 1) throw "qrbox.width is not positive."
                    } else throw "qrbox.width is mandatory.";
                    var o = n.height;
                    if (void 0 !== o && null !== o) {
                        if ("number" != typeof o) throw "qrbox.height is not a number.";
                        if (o < 1) throw "qrbox.height is not positive."
                    } else throw "qrbox.height is mandatory."
                }
                var a = e.aspectRatio;
                if (void 0 !== a && null !== a) {
                    if ("number" != typeof a) throw "aspectRatio is not a number.";
                    if (a < 1) throw "aspectRatio is not positive."
                }
                var s = e.disableFlip;
                if (void 0 !== s && null !== s && "boolean" != typeof s) throw "disableFlip is not a boolean.";
                var c = e.videoConstraints;
                if (void 0 !== c && null !== c && "object" != typeof c) throw "videoConstraints is not an object.";
                return {
                    fps: t,
                    qrbox: n,
                    aspectRatio: a,
                    disableFlip: s,
                    videoConstraints: c
                }
            }
        }]), e
    }();
    var K = function() {
        function e() {
            i(this, e)
        }
        return s(e, null, [{
            key: "create",
            value: function(e) {
                if (!e) return;
                var t = e.verbose;
                if (void 0 !== t && null !== t && "boolean" != typeof t) throw "verbose is not a boolean.";
                return {
                    verbose: t
                }
            }
        }]), e
    }();
    var W = function() {
        function e() {
            i(this, e)
        }
        return s(e, null, [{
            key: "create",
            value: function(e) {
                if (!e) return;
                var t = e.qrcode;
                if (void 0 !== t && null !== t) {
                    if ("object" != typeof t) throw "qrcode should be an object.";
                    var n = t.edgeDetection;
                    if (void 0 !== n && null !== n && "boolean" != typeof n) throw "qrcode.edgeDetection should be a boolean."
                }
                var r = e.formatsToSupport;
                if (void 0 !== r && null !== r) {
                    if (!Array.isArray(r)) throw "formatsToSupport should be an array.";
                    var o = !0,
                        i = !1,
                        a = void 0;
                    try {
                        for (var s, c = g(r); !(o = (s = c.next()).done); o = !0) {
                            var u = s.value;
                            if ("string" != typeof u) throw "formatsToSupport[i] should be a string.";
                            if (Object.values(G).filter((function(e) {
                                    return e.value === u
                                })).length) continue;
                            throw "Unsupported format: ".concat(u)
                        }
                    } catch (e) {
                        i = !0, a = e
                    } finally {
                        try {
                            o || null == c.return || c.return()
                        } finally {
                            if (i) throw a
                        }
                    }
                }
                return {
                    qrcode: t,
                    formatsToSupport: r
                }
            }
        }]), e
    }();
    var Z = function() {
        function e() {
            i(this, e)
        }
        return s(e, null, [{
            key: "create",
            value: function(e) {
                if (!e) return;
                var t = e.width;
                if (void 0 !== t && null !== t) {
                    if ("number" != typeof t) throw "width is not a number.";
                    if (t < 1) throw "width is not positive."
                }
                var n = e.height;
                if (void 0 !== n && null !== n) {
                    if ("number" != typeof n) throw "height is not a number.";
                    if (n < 1) throw "height is not positive."
                }
                var r = e.qrbox;
                if (void 0 !== r && null !== r) {
                    if ("object" != typeof r) throw "qrbox is not an object.";
                    var o = r.width;
                    if (void 0 !== o && null !== o) {
                        if ("number" != typeof o) throw "qrbox.width is not a number.";
                        if (o < 1) throw "qrbox.width is not positive."
                    } else throw "qrbox.width is mandatory.";
                    var a = r.height;
                    if (void 0 !== a && null !== a) {
                        if ("number" != typeof a) throw "qrbox.height is not a number.";
                        if (a < 1) throw "qrbox.height is not positive."
                    } else throw "qrbox.height is mandatory."
                }
                var s = e.aspectRatio;
                if (void 0 !== s && null !== s) {
                    if ("number" != typeof s) throw "aspectRatio is not a number.";
                    if (s < 1) throw "aspectRatio is not positive."
                }
                var c = e.disableFlip;
                if (void 0 !== c && null !== c && "boolean" != typeof c) throw "disableFlip is not a boolean.";
                return {
                    width: t,
                    height: n,
                    qrbox: r,
                    aspectRatio: s,
                    disableFlip: c
                }
            }
        }]), e
    }();
    var J = function() {
        function e() {
            i(this, e)
        }
        return s(e, null, [{
            key: "create",
            value: function(e) {
                if (!e) return;
                var t = e.use
            }
        }]), e
    }();
    var X = function() {
        function e(t, n, r) {
            i(this, e), this.html5Qrcode = t, this.successCallback = n, this.errorCallback = r, this.logger = new Y(r), this.qrcode = void 0, this.qrCodeConfig = void 0
        }
        return s(e, [{
            key: "setup",
            value: function(e) {
                this.qrcode = new Z(e), this.qrCodeConfig = e
            }
        }, {
            key: "decode",
            value: function(e) {
                var t = null;
                try {
                    t = this.qrcode.decode(e, this.qrCodeConfig)
                } catch (e) {
                    t = null
                }
                if (t) {
                    var n = new S(t.text, t.points);
                    this.successCallback(n)
                } else this.errorCallback("QR code not found.")
            }
        }]), e
    }();
    var Y = function() {
        function e(t) {
            i(this, e), this.errorCallback = t
        }
        return s(e, [{
            key: "log",
            value: function(e) {
                console.log(e)
            }
        }, {
            key: "warn",
            value: function(e) {
                console.warn(e)
            }
        }, {
            key: "error",
            value: function(e) {
                this.errorCallback(e)
            }
        }]), e
    }();
    var $ = function() {
        function e() {
            i(this, e)
        }
        return s(e, null, [{
            key: "is",
            value: function() {
                return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)
            }
        }, {
            key: "getMediaDevices",
            value: function() {
                return navigator.mediaDevices.enumerateDevices()
            }
        }, {
            key: "get",
            value: function(e) {
                return navigator.mediaDevices.getUserMedia(e)
            }
        }]), e
    }();
    var ee = function() {
        function e(t) {
            i(this, e), this.html5Qrcode = t, this.logger = new Y(t.errorCallback)
        }
        return s(e, [{
            key: "getMediaDevices",
            value: function() {
                return $.getMediaDevices().then((function(e) {
                    return e.filter((function(e) {
                        return "videoinput" === e.kind
                    }))
                }))
            }
        }, {
            key: "getMediaStream",
            value: function(e) {
                var t = e.videoConstraints;
                if (t && Object.keys(t).length) return $.get(t);
                var n = {};
                return e.deviceId ? n.deviceId = {
                    exact: e.deviceId
                } : e.facingMode && (n.facingMode = {
                    exact: e.facingMode
                }), $.get({
                    video: n,
                    audio: !1
                })
            }
        }]), e
    }();
    var te = function() {
        function e(t, n) {
            i(this, e), this.html5Qrcode = t, this.video = n, this.logger = new Y(t.errorCallback)
        }
        return s(e, [{
            key: "setup",
            value: function(e) {
                var t = this,
                    n = function() {
                        var n = t.video.videoWidth,
                            r = t.video.videoHeight;
                        if (0 === n || 0 === r) {
                            t.logger.log("Video size not set, skipping setup.");
                            return
                        }
                        t.logger.log("Video dimensions: ".concat(n, "x").concat(r));
                        var o = e.qrbox;
                        if (o) {
                            var i = o.width,
                                a = o.height;
                            t.html5Qrcode.qrbox = new _((n - i) / 2, (r - a) / 2, i, a)
                        } else {
                            var s = e.aspectRatio;
                            s && (r = Math.floor(n / s));
                            var c = 0;
                            t.html5Qrcode.qrbox = new _(c, (t.video.videoHeight - r) / 2, n, r)
                        }
                        t.html5Qrcode.canvasContext.clearRect(0, 0, t.html5Qrcode.canvasElement.width, t.html5Qrcode.canvasElement.height), t.html5Qrcode.canvasElement.width = n, t.html5Qrcode.canvasElement.height = r
                    };
                this.video.addEventListener("loadeddata", (function() {
                    n()
                })), this.video.addEventListener("resize", (function() {
                    n()
                }))
            }
        }]), e
    }();
    var ne = function() {
        function e(t, n) {
            i(this, e), this.html5Qrcode = t, this.qrCode = n, this.logger = new Y(t.errorCallback)
        }
        return s(e, [{
            key: "start",
            value: function(e) {
                var t = this;
                return new Promise((function(n, r) {
                    if (!t.html5Qrcode.element) {
                        r("HTML Element with id '".concat(t.html5Qrcode.elementId, "' not found."));
                        return
                    }
                    if (!$.is()) {
                        r("Camera access not supported by this browser.");
                        return
                    }
                    if (t.html5Qrcode.interval) {
                        r("Scanning already started.");
                        return
                    }
                    var o = e.fps,
                        i = e.disableFlip,
                        a = e.videoConstraints;
                    t.html5Qrcode.video = document.createElement("video"), t.html5Qrcode.video.muted = !0, t.html5Qrcode.video.playsInline = !0, t.html5Qrcode.video.autoplay = !0, t.html5Qrcode.video.style.width = "100%", t.html5Qrcode.video.style.height = "100%", t.html5Qrcode.video.style.objectFit = "contain", t.html5Qrcode.video.style.position = "absolute", t.html5Qrcode.video.style.left = "0", t.html5Qrcode.video.style.top = "0", t.html5Qrcode.video.style.zIndex = "-1", t.html5Qrcode.video.style.display = "none", t.html5Qrcode.element.appendChild(t.html5Qrcode.video), t.html5Qrcode.canvasElement = document.createElement("canvas"), t.html5Qrcode.canvasContext = t.html5Qrcode.canvasElement.getContext("2d"), t.html5Qrcode.canvasElement.style.width = "100%", t.html5Qrcode.canvasElement.style.height = "100%", t.html5Qrcode.canvasElement.style.objectFit = "contain", t.html5Qrcode.canvasElement.style.position = "absolute", t.html5Qrcode.canvasElement.style.left = "0", t.html5Qrcode.canvasElement.style.top = "0", t.html5Qrcode.canvasElement.style.zIndex = "0", t.html5Qrcode.element.appendChild(t.html5Qrcode.canvasElement), t.html5Qrcode.video.addEventListener("canplay", (function() {
                        t.html5Qrcode.video.play(), t.html5Qrcode.video.style.display = "block", t.html5Qrcode.canvasElement.style.display = "block"
                    })), t.html5Qrcode.video.addEventListener("error", (function(e) {
                        console.error("Video element error:", e), r("Video stream error: " + (e.message || e.name || e.target.error.message || e.target.error.name || "Unknown Error"))
                    }));
                    var s = new ee(t.html5Qrcode);
                    s.getMediaStream({
                        deviceId: e.deviceId,
                        facingMode: e.facingMode,
                        videoConstraints: a
                    }).then((function(e) {
                        t.html5Qrcode.stream = e, t.html5Qrcode.video.srcObject = e;
                        var a = new te(t.html5Qrcode, t.html5Qrcode.video);
                        a.setup(e), t.html5Qrcode.interval = setInterval((function() {
                            return t.scan(i)
                        }), 1e3 / o), n()
                    })).catch((function(e) {
                        r("Failed to start scanning: " + (e.message || e.name || "Unknown Error"))
                    }))
                }))
            }
        }, {
            key: "scan",
            value: function(e) {
                if (this.html5Qrcode.video.readyState === this.html5Qrcode.video.HAVE_ENOUGH_DATA) {
                    var t = this.html5Qrcode.canvasElement.width,
                        n = this.html5Qrcode.canvasElement.height;
                    this.html5Qrcode.canvasContext.drawImage(this.html5Qrcode.video, 0, 0, t, n);
                    try {
                        this.qrCode.decode(this.html5Qrcode.canvasElement)
                    } catch (e) {
                        this.logger.error(e)
                    }
                }
            }
        }, {
            key: "stop",
            value: function() {
                var e = this;
                return new Promise((function(t, n) {
                    if (!e.html5Qrcode.stream) {
                        n("No stream to stop.");
                        return
                    }
                    clearInterval(e.html5Qrcode.interval), e.html5Qrcode.stream.getTracks().forEach((function(e) {
                        e.stop()
                    })), e.html5Qrcode.video.remove(), e.html5Qrcode.canvasElement.remove(), e.html5Qrcode.stream = null, e.html5Qrcode.video = null, e.html5Qrcode.canvasElement = null, e.html5Qrcode.canvasContext = null, e.html5Qrcode.interval = null, t()
                }))
            }
        }]), e
    }();
    var re = function() {
        function e(t, n) {
            i(this, e), this.html5Qrcode = t, this.qrCode = n, this.logger = new Y(t.errorCallback)
        }
        return s(e, [{
            key: "start",
            value: function(e) {
                var t = this;
                return new Promise((function(n, r) {
                    var o = e.image;
                    if (!o) {
                        r("No image provided.");
                        return
                    }
                    var i = new Image;
                    i.onload = function() {
                        t.html5Qrcode.canvasElement = document.createElement("canvas"), t.html5Qrcode.canvasContext = t.html5Qrcode.canvasElement.getContext("2d"), t.html5Qrcode.canvasElement.width = i.width, t.html5Qrcode.canvasElement.height = i.height, t.html5Qrcode.canvasContext.drawImage(i, 0, 0, i.width, i.height);
                        try {
                            t.qrCode.decode(t.html5Qrcode.canvasElement), n()
                        } catch (e) {
                            r("QR code not found in image: " + e.message)
                        }
                    }, i.onerror = function() {
                        r("Failed to load image.")
                    }, i.src = o
                }))
            }
        }, {
            key: "stop",
            value: function() {
                var e = this;
                return new Promise((function(t, n) {
                    if (!e.html5Qrcode.canvasElement) {
                        n("No image to stop.");
                        return
                    }
                    e.html5Qrcode.canvasElement.remove(), e.html5Qrcode.canvasElement = null, e.html5Qrcode.canvasContext = null, t()
                }))
            }
        }]), e
    }();
    var oe = function() {
        function e(t, n, r) {
            i(this, e), this.elementId = t, this.successCallback = n, this.errorCallback = r, this.logger = new Y(r), this.element = document.getElementById(t), this.video = null, this.stream = null, this.canvasElement = null, this.canvasContext = null, this.interval = null, this.qrbox = null, this.qrCode = null
        }
        return s(e, [{
            key: "start",
            value: function(e, t, n) {
                var r = this;
                return new Promise((function(o, i) {
                    if (!r.element) {
                        i("HTML Element with id '".concat(r.elementId, "' not found."));
                        return
                    }
                    if (!$.is()) {
                        i("Camera access not supported by this browser.");
                        return
                    }
                    if (r.interval) {
                        i("Scanning already started.");
                        return
                    }
                    var a = B.create(t);
                    if (a.videoConstraints) {
                        var s = a.videoConstraints;
                        if (s.deviceId && s.deviceId.exact) e = s.deviceId.exact;
                        else if (s.facingMode && s.facingMode.exact) e = s.facingMode.exact;
                        else if (s.deviceId) e = s.deviceId;
                        else if (s.facingMode) e = s.facingMode
                    }
                    r.qrCode = new X(r, r.successCallback, r.errorCallback), r.qrCode.setup(W.create(n));
                    var c = new ne(r, r.qrCode);
                    c.start({
                        deviceId: e,
                        fps: a.fps,
                        qrbox: a.qrbox,
                        aspectRatio: a.aspectRatio,
                        disableFlip: a.disableFlip,
                        videoConstraints: a.videoConstraints
                    }).then((function() {
                        o()
                    })).catch((function(e) {
                        i(e)
                    }))
                }))
            }
        }, {
            key: "stop",
            value: function() {
                var e = this;
                return new Promise((function(t, n) {
                    if (!e.interval) {
                        n("Scanning not started.");
                        return
                    }
                    var r = new ne(e, e.qrCode);
                    r.stop().then((function() {
                        t()
                    })).catch((function(e) {
                        n(e)
                    }))
                }))
            }
        }, {
            key: "scanFile",
            value: function(e, t) {
                var n = this;
                return new Promise((function(r, o) {
                    if (!n.element) {
                        o("HTML Element with id '".concat(n.elementId, "' not found."));
                        return
                    }
                    if (n.interval) {
                        o("Scanning already started.");
                        return
                    }
                    n.qrCode = new X(n, n.successCallback, n.errorCallback), n.qrCode.setup(W.create(t));
                    var i = new re(n, n.qrCode);
                    i.start({
                        image: e
                    }).then((function() {
                        r()
                    }))
                }))
            }
        }, {
            key: "clear",
            value: function() {
                var e = this;
                return new Promise((function(t, n) {
                    if (!e.element) {
                        n("HTML Element with id '".concat(e.elementId, "' not found."));
                        return
                    }
                    if (e.interval) {
                        n("Clear cannot be called while scanning is in progress.");
                        return
                    }
                    if (e.canvasElement) {
                        e.canvasElement.remove(), e.canvasElement = null, e.canvasContext = null
                    }
                    t()
                }))
            }
        }], [{
            key: "getCameras",
            value: function() {
                return new Promise((function(e, t) {
                    if (!$.is()) {
                        t("Camera access not supported by this browser.");
                        return
                    }
                    $.getMediaDevices().then((function(t) {
                        var n = t.filter((function(e) {
                            return "videoinput" === e.kind
                        }));
                        e(n)
                    })).catch((function(e) {
                        t("Error getting cameras: ".concat(e.message))
                    }))
                }))
            }
        }]), e
    }();
    var ie = function(e) {
        u(n, e);
        var t = h(n);

        function n(e, r, o) {
            var a;
            return i(this, n), (a = t.call(this, e)).verbose = void 0 === r || r, a.lastMatchFound = void 0, a.qrCodeSuccessCallback = o || a.default
        }
        return s(n, [{
            key: "render",
            value: function(e, t) {
                var n = this;
                this.qrCodeSuccessCallback = e, this.qrCodeErrorCallback = t, this.html5Qrcode = new oe(this.elementId, this.qrCodeSuccessCallback, this.qrCodeErrorCallback);
                var r = {
                    fps: 10,
                    qrbox: 250,
                    aspectRatio: 1.7777778,
                    disableFlip: !1
                };
                this.html5Qrcode.start({
                    facingMode: "environment"
                }, r, {}).then((function() {})).catch((function(e) {
                    n.qrCodeErrorCallback(e)
                }))
            }
        }, {
            key: "clear",
            value: function() {
                this.html5Qrcode.stop().then((function() {})).catch((function(e) {
                    console.error("Error stopping scanner: ", e)
                }))
            }
        }, {
            key: "default",
            value: function(e) {
                this.verbose && console.log(e)
            }
        }]), n
    }(Html5Qrcode);
    return {
        Html5Qrcode: oe,
        Html5QrcodeScanner: ie,
        Html5QrcodeSupportedFormats: G
    }
}();
